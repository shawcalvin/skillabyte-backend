# Generated by Django 5.1 on 2024-09-08 16:43

import django.contrib.postgres.fields
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='MultipleChoiceQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prompt', models.TextField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SelectManyQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prompt', models.TextField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=256)),
                ('overview', models.TextField()),
                ('knowledge_level', models.CharField(choices=[('Basic', 'Basic'), ('Intermediate', 'Intermediate'), ('Advanced', 'Advanced'), ('Update', 'Update'), ('Overview', 'Overview')])),
                ('fields_of_study', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(choices=[('Accounting', 'Accounting'), ('Accounting (Governmental)', 'Accounting Governmental'), ('Auditing', 'Auditing'), ('Business Law', 'Business Law'), ('Economics', 'Economics'), ('Finance', 'Finance'), ('Information Technology', 'Information Technology'), ('Management Services', 'Management Services'), ('Regulatory Ethics', 'Regulatory Ethics'), ('Specialized Knowledge', 'Specialized Knowledge'), ('Statistics', 'Statistics'), ('Taxes', 'Taxes'), ('Behavioral Ethics', 'Behavioral Ethics'), ('Business Management & Organization', 'Business Management And Organization'), ('Communications and Marketing', 'Communications And Marketing'), ('Computer Software & Applications', 'Computer Software And Applications'), ('Personal Development', 'Personal Development'), ('Personnel / Human Resources', 'Personnel Human Resources'), ('Production', 'Production')], max_length=100), size=None)),
                ('prerequisite_knowledge', models.TextField()),
                ('is_published', models.BooleanField(default=False)),
                ('cpe_credits', models.FloatField()),
                ('prerequisite_courses', models.ManyToManyField(blank=True, related_name='required_for', to='courses.course')),
            ],
        ),
        migrations.CreateModel(
            name='LearningObjective',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('objective', models.TextField()),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='courses.course')),
            ],
        ),
        migrations.CreateModel(
            name='MultipleChoiceAnswerChoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.TextField()),
                ('is_correct', models.BooleanField()),
                ('feedback', models.TextField()),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answer_choices', to='courses.multiplechoicequestion')),
            ],
        ),
        migrations.CreateModel(
            name='SelectManyAnswerChoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.TextField()),
                ('is_correct', models.BooleanField()),
                ('feedback', models.TextField()),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answer_choices', to='courses.selectmanyquestion')),
            ],
        ),
    ]
